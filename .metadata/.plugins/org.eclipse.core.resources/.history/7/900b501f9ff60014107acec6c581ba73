package edu.sjsu.authentication;

import java.util.HashMap;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import edu.sjsu.authentication.model.LoginModel;
import edu.sjsu.authentication.service.IAuthenticationService;

/**
 * Handles requests for the application home page.
 */
@Controller
public class HomeController {
	
	private static final Logger logger = LoggerFactory.getLogger(HomeController.class);
	@Autowired
	private IAuthenticationService authenticationService;
	
	/**
	 * Simply selects the home view to render by returning its name.
	 */
	@RequestMapping(value = "/loginAuthentication", method = RequestMethod.GET, produces = "application/json")
	public @ResponseBody UserModel loginAuthentication(@RequestParam HashMap<String, String> loginDetailsMap) {
		UserModel user = null;
		try {
			LoginModel login = new LoginModel();
			login.setUserName(loginDetailsMap.get("userName"));
			login.setPassword(loginDetailsMap.get("password"));
			authenticationService.getUserDetails(login);
		} catch (Exception exception) {
			user = null;
		}
		return user;
	}
	
	/**
	 * Simply selects the home view to render by returning its name.
	 */
	@RequestMapping(value = "/signup", method = RequestMethod.POST)
	public String signUp(@RequestParam HashMap<String, String> userModel) { 
		boolean isSignedUp = false;
		String redirection = "signUp";
		try {
			if (!bindingResult.hasErrors()) {
				if(!userModel.getPassword().equals(userModel.getConfirmPassword())) {
					model.addAttribute("signingUpError", "passwords mismatch");
				} else {
					isSignedUp = authenticationService.signUp(userModel);
					if(isSignedUp) {
						redirectAttributes.addFlashAttribute("information", "User signedup successfully");
						redirection = "redirect:/login";
					} else {
						model.addAttribute("signingUpError", "Error Signing up");
					}
				}
			} 
		} catch (Exception exception) {
			model.addAttribute("signingUpError", "Error Signing up");
		}
		return redirection;
	}
}